sensor:
  - platform: homeassistant
    id: ha_${climate_entity}_current_temp_sensor
    entity_id: climate.${climate_entity}
    attribute: current_temperature
    on_value: 
      then:
        - lvgl.label.update:
            id: lbl_${climate_entity}_current_temp
            text:
              format: "\U000F050F %.1f Â°C"
              args: [x]
            
  - platform: homeassistant
    id: ha_${climate_entity}_target_temp_sensor
    entity_id: climate.${climate_entity}
    attribute: temperature
    on_value: 
      then:
        - lvgl.label.update:
            id: lbl_${climate_entity}_target_temp
            text:
              format: "%.1f"
              args: [x]

  - platform: homeassistant
    id: ha_${climate_entity}_target_temp_step_sensor
    entity_id: climate.${climate_entity}
    attribute: target_temp_step

text_sensor:
  - platform: homeassistant
    id: ha_${climate_entity}_hvac_action_sensor
    entity_id: climate.${climate_entity}
    attribute: hvac_action
    filters:
      - map:
          - heating -> Heating
          - cooling -> Cooling
          - idle -> Idle
          - off -> Off
    on_value: 
      then:
        - if:
            condition:
              lambda: |-
                return x == "Heating";
            then:
              - script.execute:
                  id: on_${climate_entity}_hvac_action_heating_activated
            else:
              - if:
                  condition:
                    lambda: |-
                      return x == "Cooling";
                  then:
                    - script.execute:
                        id: on_${climate_entity}_hvac_action_cooling_activated
                  else:
                    - if:
                        condition: 
                          lambda: |-
                            return x == "Idle";
                        then:
                          if:
                            condition:
                              text_sensor.state:
                                id: ha_${climate_entity}_state_sensor
                                state: heat
                            then:
                              script.execute:
                                id: on_${climate_entity}_hvac_action_idleheat_activated
                            else:
                              if:
                                condition:
                                  text_sensor.state:
                                    id: ha_${climate_entity}_state_sensor
                                    state: cool
                                then:
                                  script.execute:
                                    id: on_${climate_entity}_hvac_action_idlecool_activated
                                else:
                                  script.execute:
                                    id: on_${climate_entity}_hvac_action_idleunsupported_activated
                        else:
                          - if:
                              condition:
                                lambda: |-
                                  return x == "Off";
                              then:
                                - script.execute:
                                    id: on_${climate_entity}_hvac_action_off_activated
                              else:
                                - script.execute:
                                    id: on_${climate_entity}_hvac_action_unsupported_activated

  - platform: homeassistant
    id: ha_${climate_entity}_state_sensor
    entity_id: climate.${climate_entity}
    filters:
      - to_lower:
    on_value: 
      then:
        lambda: id(on_${climate_entity}_hvac_mode_activated)->execute(x);
