esphome:
  name: livingroom-indicator-panel
  friendly_name: Livingroom indicator panel

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 8MB
  framework:
    type: esp-idf
    #version: 5.2.2
    #platform_version: 6.7.0
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_8MB: "y"
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: "y"
      CONFIG_SPIRAM_RODATA: "y"

psram:
  mode: octal
  speed: 80MHz

preferences:
  flash_write_interval: 1min

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret livingroom_indicator_panel_encryption_key
  on_client_connected:
    then:
      lvgl.widget.show: lbl_api_connection
  on_client_disconnected:    
    then:
      - if:
          condition:
            - not: api.connected
          then:
            - lvgl.widget.hide: lbl_api_connection

ota:
  - platform: esphome
    password: !secret livingroom_indicator_panel_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  on_connect:
    then:
      lvgl.widget.show: lbl_wifi_connection
  on_disconnect:
    then:
      lvgl.widget.hide: lbl_wifi_connection

#-------------------------------------------
# Internal outputs
#-------------------------------------------
output:
    # Backlight LED
  - platform: ledc
    pin:
      number: GPIO45
      ignore_strapping_warning: true
    id: ledc_GPIO45
    frequency: 100Hz

light:
  - platform: monochromatic
    output: ledc_GPIO45
    name: Display Backlight
    id: display_backlight
    restore_mode: ALWAYS_ON
    entity_category: config

#-------------------------------------------
# Internal button
#-------------------------------------------
binary_sensor:
  - platform: gpio
    internal: true
    id: indicator_button
    name: "Indicator Button"
    pin:
      number: GPIO38
      inverted: yes
      mode:
        input: true
        pullup: true
    on_press:
      then:
        - if:
            condition: lvgl.is_paused
            then:
              - lvgl.resume
              - lvgl.widget.redraw
              - delay: 0.5s
              - light.turn_on: display_backlight
            else:
              - light.turn_off: display_backlight
              - delay: 1s
              - lvgl.pause:
                  show_snow: true

#-------------------------------------------
# Display st7701s spi
#-------------------------------------------
spi:
  - id: lcd_spi
    clk_pin: GPIO41
    mosi_pin: GPIO48

pca9554:
  - id: pca9554a_device
    address: 0x20
    pin_count: 16

display:
  - platform: st7701s
    id: my_display
    auto_clear_enabled: false
    data_rate: 4MHz
    update_interval: never
    spi_mode: MODE3
    color_order: RGB
    dimensions:
      width: 480
      height: 480
    invert_colors: true
    transform:
      mirror_x: true
      mirror_y: true
    cs_pin:
      pca9554: pca9554a_device
      number: 4
    reset_pin:
      pca9554: pca9554a_device
      number: 5
    de_pin: GPIO18
    hsync_pin: GPIO16
    vsync_pin: GPIO17
    pclk_pin: GPIO21
    init_sequence:
      - 1 # select canned init sequence number 1
      - delay 5ms
      - [ 0xE0, 0x1F ]  # Set sunlight readable enhancement
    data_pins:
      red:
        - 4         #r1
        - 3         #r2
        - 2         #r3
        - 1         #r4
        - 0         #r5
      green:
        - 10        #g0
        - 9         #g1
        - 8         #g2
        - 7         #g3
        - 6         #g4
        - 5         #g5
      blue:
        - 15        #b1
        - 14        #b2
        - 13        #b3
        - 12        #b4
        - 11        #b5

#-------------------------------------------
# Touchscreen FT5X06 i2c
#-------------------------------------------
i2c:
  - id: bus_a
    sda: GPIO39
    scl: GPIO40
    scan: false
    
touchscreen:
  platform: ft5x06
  transform:
    mirror_x: true
    mirror_y: true
  id: my_touchscreen
  display: my_display
  on_touch:   
    - if:
        condition: lvgl.is_paused
        then:          
          - lvgl.resume
          - lvgl.widget.redraw
          - delay: 1s
          - light.turn_on: display_backlight

#-------------------------------------------
# Home Assistant - Gas Boiler Sensors
#-------------------------------------------
time:
  - platform: homeassistant
    id: ha_time
    on_time:
      - seconds: 0
        minutes: "*"
        then:
          - logger.log: "HA ON_TIME"
          - lvgl.label.update:
              id: lbl_time
              text: !lambda return id(ha_time).now().strftime("%H:%M");
    on_time_sync:
      then:
        - logger.log: "HA ON_TIME_SYNC"
        - lvgl.label.update:
              id: lbl_time
              text: !lambda return id(ha_time).now().strftime("%H:%M");

sensor:
  - platform: homeassistant
    id: ha_gas_boiler_current_temp_sensor
    entity_id: climate.gas_boiler_thermostat
    attribute: current_temperature
    on_value: 
      then:
        - lvgl.label.update:
            id: lbl_current_temp
            text:
              format: "\U000F050F %.1f Â°C"
              args: [x]
            
  - platform: homeassistant
    id: ha_gas_boiler_temp_sensor
    entity_id: climate.gas_boiler_thermostat
    attribute: temperature
    on_value: 
      then:
        - lvgl.label.update:
            id: lbl_target_temp
            text:
              format: "%.1f"
              args: [x]

  - platform: homeassistant
    id: ha_gas_boiler_target_temp_step_sensor
    entity_id: climate.gas_boiler_thermostat
    attribute: target_temp_step

text_sensor:
  - platform: homeassistant
    id: ha_gas_boiler_hvac_action_sensor
    entity_id: climate.gas_boiler_thermostat
    attribute: hvac_action
    filters:
      - map:
          - heating -> Heating
          - idle -> Idle
          - off -> Off
    on_value: 
      then:
        - if:
            condition:
              lambda: |-
                return x == "Heating";
            then:
              - lvgl.label.update:
                  id: lbl_hvac_action
                  text_color: color_heating
                  text: "\U000F0438"
              - lvgl.label.update:
                  id: lbl_current_temp
                  text_color: color_heating
              - lvgl.arc.update:
                  id: arc_hvac_action
                  indicator:
                    arc_opa: cover
              - if:
                  condition: lvgl.is_paused
                  then:          
                  - lvgl.resume
                  - lvgl.widget.redraw
                  - delay: 1s
                  - light.turn_on: display_backlight
            else:
              - lvgl.label.update:
                  id: lbl_current_temp
                  text_color: color_dark_text
              - if:
                  condition: 
                    lvgl.is_idle:
                      timeout: 30s
                  then:
                    - light.turn_off: display_backlight
                    - delay: 1s
                    - lvgl.pause:
                        show_snow: true
              - if:
                  condition: 
                    lambda: |-
                      return x == "Idle";
                  then:
                    - lvgl.label.update:
                        id: lbl_hvac_action
                        text_color: color_dark_text
                        text: "\U000F0150"
                    - lvgl.arc.update:
                        id: arc_hvac_action
                        indicator:
                          arc_opa: 20%
                  else:
                    - lvgl.label.update:
                        id: lbl_hvac_action
                        text_color: color_dark_text
                        text: !lambda return x;
                    - lvgl.arc.update:
                        id: arc_hvac_action
                        indicator:
                          arc_opa: transp

  - platform: homeassistant
    id: ha_gas_boiler_state_sensor
    entity_id: climate.gas_boiler_thermostat
    filters:
      - to_lower:
    on_value: 
      then:
        if:
          condition:
            lambda: |-
              return x == "heat";
          then:
            - lvgl.buttonmatrix.update:
                id: btn_matrix_modes
                items:
                  checked:
                    bg_color: color_heating
                    bg_opa: "20%"
            - lvgl.matrix.button.update:
                id: btn_heat
                control:
                  checked: true
          else:
            - lvgl.buttonmatrix.update:
                id: btn_matrix_modes
                items:
                  checked:
                    bg_color: color_dark_text
                    bg_opa: "20%"
            - lvgl.matrix.button.update:
                id: btn_off
                control:
                  checked: true

#-------------------------------------------
# Roboto fonts with material icons for LVGL
#-------------------------------------------
font:
  - file: "fonts/Roboto-Regular.ttf"
    size: 14
    id: "roboto_14"
    bpp: 4
  - file: "fonts/Roboto-Regular.ttf"
    size: 16
    id: "roboto_16"
    bpp: 4
  - file: "fonts/Roboto-Regular.ttf"
    size: 18
    id: "roboto_18"
    bpp: 4
  - file: "fonts/Roboto-Regular.ttf"
    size: 20
    id: "roboto_20"
    bpp: 4
    extras:
      - file: "fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F0393", # mdi:thermostat
          "\U000F07D0", # mdi:home-assistant
          "\U000F05A9"  # mdi:wifi
        ]
  - file: "fonts/Roboto-Regular.ttf"
    size: 22
    id: "roboto_22"
    bpp: 4
  - file: "fonts/Roboto-Regular.ttf"
    size: 24
    id: "roboto_24"
    bpp: 4
    extras:
      - file: "fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F050F",  # mdi:thermometer
          "\U000F0438",  # mdi:radiator
          "\U000F0150"   # mdi:clock-outline
        ]
  - file: "fonts/Roboto-Regular.ttf"
    size: 26
    id: "roboto_26"
    bpp: 4
    extras:
      - file: "fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "\U000F0238",  # mdi:fire
          "\U000F0906"   # mdi:power-standby
        ]
  - file: "fonts/Roboto-Regular.ttf"
    size: 28
    id: "roboto_28"
    bpp: 4
  - file: "fonts/Roboto-Regular.ttf"
    size: 96
    id: "roboto_96"
    bpp: 4

#----------------------------------------------
# Color and dark theme configuration for LVGL
#----------------------------------------------
#
# material color palette: https://vuetifyjs.com/en/styles/colors/#material-colors
# lvgl default theme colors: https://github.com/lvgl/lvgl/blob/master/src/themes/default/lv_theme_default.c
#
# lvgl default dark theme settings (see page.on_load trigger)
#     primary color palette: LIGHT_BLUE
#     secondary_color_palette: AMBER
#
color:
  - id: color_heating # mc:amber-darken-4
    hex: FF6F00
  - id: color_light_blue_main # mc: light_blue_main
    hex: 03A9F4
  - id: color_dark_card # lvgl:DARK_COLOR_CARD
    hex: 282b30
  - id: color_dark_text # lvgl:DARK_COLOR_TEXT / mc: grey-lighten-5
    hex: FAFAFA

lvgl:
  displays:
    - my_display
  touchscreens:
    - my_touchscreen
  default_font: "roboto_14"
  on_idle:
    timeout: 30min
    then:
      if:
        condition:
          lambda: |-
            return id(ha_gas_boiler_hvac_action_sensor).state != "Heating";
        then:
          - light.turn_off: display_backlight
          - delay: 1s
          - lvgl.pause:
              show_snow: true
  top_layer:
    widgets:
      - obj:
          id: "page_header"
          height: 50
          width: 100%
          bg_opa: cover
          bg_color: color_dark_card
          border_width: 0
          border_opa: transp
          radius: 0
          pad_all: 10
          scrollable: false
          align: top_mid
          widgets:
            - label:
                id: lbl_time
                align: left_mid
                text: "--:--"
                text_font: "roboto_20"
                text_color: color_light_blue_main
                text_align: center
            - label:
                id: "lbl_title"
                text: "\U000F0393 GAS BOILER"
                text_font: "roboto_20"
                text_align: center
                text_color: color_light_blue_main
                align: center
            - obj:
                id: "connections_container"
                border_width: 0
                bg_opa: transp
                pad_all: 0
                align: right_mid
                layout:
                  type: flex
                  flex_flow: row
                  pad_row: 0
                  flex_align_main: end
                  flex_align_cross: center
                  flex_align_track: center
                widgets:
                  - label:
                      id: "lbl_api_connection"
                      hidden: true
                      text: "\U000F07D0"
                      text_font: "roboto_20"
                      text_align: center
                      text_color: color_light_blue_main
                  - label:
                      id: "lbl_wifi_connection"
                      hidden: true
                      text: "\U000F05A9"
                      text_font: "roboto_20"
                      text_align: center
                      text_color: color_light_blue_main
  pages:
    - id: main_page
      on_load:
        then:
          lambda: |-
            lv_theme_t * darkth = lv_theme_default_init(NULL, lv_palette_main(LV_PALETTE_LIGHT_BLUE), lv_palette_main(LV_PALETTE_AMBER), true, lv_theme_get_font_normal(NULL));
            lv_disp_set_theme(NULL, darkth);
            ESP_LOGD("main_page", "Dark theme configured successfully.");
      layout:
        type: grid
        grid_rows: [fr(1), content, fr(1)]
        grid_columns: [fr(1), content, fr(1)]
        pad_column: 0
      pad_top: 0
      pad_left: 20
      pad_right: 20
      pad_bottom: 5
      widgets:
        - arc:
            id: "arc_hvac_action"
            grid_cell_row_pos: 0
            grid_cell_column_pos: 0
            grid_cell_row_span: 3
            grid_cell_column_span: 3
            grid_cell_x_align: center
            grid_cell_y_align: center
            adjustable: false            
            value: 100
            width: 300
            height: 300
            translate_y: 8
            arc_width: 4
            indicator:
              arc_color: color_heating
              arc_opa: transp
              arc_width: 4
        - label:
            id: "lbl_hvac_action"
            grid_cell_row_pos: 0
            grid_cell_column_pos: 1
            grid_cell_x_align: center
            grid_cell_y_align: end
            text: "-"
            text_font: "roboto_24"
            pad_bottom: 8
        - button:
            id: "btn_increase_target_temp"
            grid_cell_row_pos: 1
            grid_cell_column_pos: 2
            grid_cell_x_align: end
            grid_cell_y_align: center
            height: 52
            width: 52
            bg_color: color_dark_card
            widgets:
              - label:
                  text: "+"
                  text_font: "roboto_26"
                  align: center
            on_click:
              then:
                homeassistant.action:
                  action: "climate.set_temperature"
                  data:
                    entity_id: "climate.gas_boiler_thermostat"
                    temperature: !lambda return id(ha_gas_boiler_temp_sensor).state + 0.5;
                    
        - button:
            id: "btn_decrease_target_temp"
            grid_cell_row_pos: 1
            grid_cell_column_pos: 0
            grid_cell_x_align: start
            grid_cell_y_align: center
            height: 52
            width: 52
            bg_color: color_dark_card
            widgets:
              - label:
                  text: "-"
                  text_font: "roboto_26"
                  align: center
            on_click:
              then:
                homeassistant.action:
                  action: "climate.set_temperature"
                  data:
                    entity_id: "climate.gas_boiler_thermostat"
                    temperature: !lambda return id(ha_gas_boiler_temp_sensor).state - 0.5;
        - label:
            id: "lbl_current_temp"
            grid_cell_row_pos: 2
            grid_cell_column_pos: 1
            grid_cell_x_align: center
            grid_cell_y_align: start
            text: "--.- Â°C"
            text_font: "roboto_24"
            pad_top: 10
        - label:
            id: "lbl_target_temp"
            grid_cell_row_pos: 1
            grid_cell_column_pos: 1
            grid_cell_x_align: center
            grid_cell_y_align: center
            text: "--.-"
            text_font: "roboto_96"
            pad_all: 0
        - label:
            id: "lbl_target_temp_unit"
            grid_cell_row_pos: 1
            grid_cell_column_pos: 2
            text: "Â°C"
            text_font: "roboto_28"
            pad_top: 15
        - buttonmatrix:
            id: "btn_matrix_modes"
            grid_cell_row_pos: 2
            grid_cell_column_span: 3
            grid_cell_column_pos: 0
            grid_cell_x_align: center
            grid_cell_y_align: end
            one_checked: true
            height: 50
            width: 340
            pad_column: 0
            pad_all: 0
            border_width: 0
            items:
              text_font: "roboto_26"
              bg_opa: transp
            rows:
              - buttons:
                  - text: "\U000F0238"
                    id: btn_heat
                    control:
                      checkable: true
                    on_value:
                      then:
                        - homeassistant.action:
                            action: "climate.set_hvac_mode"
                            data:
                              entity_id: "climate.gas_boiler_thermostat"
                              hvac_mode: "heat"
                        - if:
                            condition:
                              lambda: |-
                                return x;
                            then:
                              lvgl.buttonmatrix.update:
                                id: btn_matrix_modes
                                items:
                                  checked:
                                    bg_color: color_heating
                                    bg_opa: "20%"
                  - text: "\U000F0906"
                    id: btn_off
                    control:
                      checkable: true
                    on_value:
                      then:
                        - homeassistant.action:
                            action: "climate.set_hvac_mode"
                            data:
                              entity_id: "climate.gas_boiler_thermostat"
                              hvac_mode: "off"
                        - if:
                            condition:
                              lambda: |-
                                return x;
                            then:
                              lvgl.buttonmatrix.update:
                                id: btn_matrix_modes
                                items:
                                  checked:
                                    bg_color: color_dark_text
                                    bg_opa: "20%"
